{
    "type": [
        1,
        0,
        1,
        2,
        0,
        1,
        2,
        0,
        1,
        3,
        0,
        1,
        3,
        0,
        1,
        0,
        1,
        2,
        2,
        0,
        1,
        0,
        1,
        0,
        1,
        3,
        0,
        1,
        3,
        0,
        1,
        0,
        1,
        3,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        3,
        0,
        1,
        3,
        0,
        1,
        3,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        2,
        0,
        1,
        0,
        1,
        0,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        2,
        0,
        1,
        0,
        1,
        0,
        1,
        3,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        2,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        0,
        1,
        0,
        1,
        3,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        0,
        1,
        3,
        0,
        1,
        0,
        1,
        3,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        0,
        1,
        0,
        1,
        3,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        0,
        1,
        0,
        1,
        3,
        0,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        3,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        0,
        1,
        3,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        0,
        1,
        0,
        1,
        0,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        0,
        1,
        0,
        1,
        2,
        0,
        1,
        2,
        0,
        1,
        2,
        0,
        1,
        2,
        0,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        3,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        2,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        3,
        0,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        3,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        3,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        0,
        1,
        0,
        1,
        0,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        2,
        0,
        1,
        3,
        2,
        0,
        1,
        2,
        0,
        1,
        3,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        3,
        2,
        0,
        1,
        3,
        2,
        2,
        0,
        1,
        0,
        1,
        3,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        0,
        1,
        0,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        3,
        0,
        1,
        0,
        1,
        0,
        1,
        3,
        0,
        1,
        0,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        3,
        0,
        1,
        0,
        0,
        1,
        0,
        1,
        3,
        0,
        1,
        2,
        2,
        2,
        0,
        1,
        0,
        1,
        0,
        1,
        3,
        0,
        1,
        0,
        1,
        3,
        0,
        1,
        3,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        0,
        1,
        0,
        1,
        2,
        0,
        1,
        2,
        2,
        2,
        0,
        1,
        0,
        1,
        3,
        0,
        1,
        0,
        1,
        3,
        0,
        1,
        2,
        2,
        2,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        2,
        2,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        2,
        2,
        0,
        1,
        3,
        0,
        1,
        3,
        0,
        1,
        3,
        2,
        0,
        1,
        3,
        0,
        1,
        0,
        1,
        3,
        3,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        3,
        0,
        1,
        0,
        1,
        3,
        0,
        1,
        0,
        1,
        0,
        0,
        1,
        0,
        1,
        0,
        0,
        1,
        0,
        1,
        0,
        0,
        1,
        0,
        1,
        3,
        0,
        1,
        0,
        1,
        0,
        0,
        1,
        0,
        1,
        0,
        0,
        1,
        0,
        1,
        0,
        0,
        1,
        0,
        1,
        3,
        0,
        1,
        0,
        1,
        2,
        0,
        1,
        0,
        1,
        0,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        0,
        1,
        0,
        1,
        0,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        0,
        1,
        0,
        0,
        1,
        0,
        1,
        2,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        3,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        3,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        0,
        1,
        2,
        0,
        1,
        0,
        1,
        3,
        0,
        1,
        0,
        1,
        3,
        0,
        1,
        0,
        1,
        3,
        0,
        1,
        3,
        0,
        1,
        2,
        2,
        2,
        3,
        3,
        2,
        2,
        2,
        2,
        2,
        3,
        2
    ],
    "data": [
        "recall_treino <- conf_matrix_treino$byClass[\"Sensitivity\"]        # Recall",
        "> ",
        "print(paste(\"Precisão:\", precision_treino))",
        "[1] \"Precisão: 0.994704992435703\"\n",
        "> ",
        "print(paste(\"Recall:\", recall_treino))",
        "[1] \"Recall: 0.995457986373959\"\n",
        "> ",
        "plotcp(arvore)",
        "Error in plotcp(arvore) : não foi possível encontrar a função \"plotcp\"\n",
        "> ",
        "library(rpart.plot)",
        "Carregando pacotes exigidos: rpart\nWarning messages:\n1: package ‘rpart.plot’ was built under R version 4.3.1 \n2: package ‘rpart’ was built under R version 4.3.3 \n",
        "> ",
        "plotcp(arvore)",
        "> ",
        "printcp(arvore)",
        "\nClassification tree:\nrpart(formula = ativo ~ ., data = oversampled_treino, method = \"class\", \n    parms = list(split = \"gini\"), control = rpart.control(minsplit = 10, \n        maxdepth = 15, minbucket = 20, cp = 0.001))\n\nVariables actually used in tree construction:\n[1] franquia           lifetime_ate_churn modelo_negocio     plano_escolhido    vendas_30_dias    \n\nRoot node error: 1321/2663 = 0.49606\n\nn= 2663 \n\n        CP nsplit rel error   xerror      xstd\n1 0.789553      0  1.000000 1.000000 0.0195317\n2 ",
        "0.152157      1  0.210447 0.210447 0.0119448\n3 0.017033      2  0.058289 0.069644 0.0071344\n4 0.007570      4  0.024224 0.028009 0.0045726\n5 0.001000      5  0.016654 0.021953 0.0040543\n",
        "> ",
        "# Curva ROC (base de treino)",
        "> ",
        "ROC <- roc(response = as.numeric(treino$ativo),  # Convertendo para binário: \"1\" -> 1, \"0\" -> 0",
        "+ ",
        "           predictor = preditos_treino[, \"1\"])",
        "Error in roc(response = as.numeric(treino$ativo), predictor = preditos_treino[,  : \n  não foi possível encontrar a função \"roc\"\n",
        "> ",
        "library(pROC)",
        "Type 'citation(\"pROC\")' for a citation.\n\nAttaching package: ‘pROC’\n\nThe following objects are masked from ‘package:stats’:\n\n    cov, smooth, var\n\nWarning message:\npackage ‘pROC’ was built under R version 4.3.3 \n",
        "> ",
        "ROC <- roc(response = as.numeric(treino$ativo),  # Convertendo para binário: \"1\" -> 1, \"0\" -> 0",
        "+ ",
        "           predictor = preditos_treino[, \"1\"])",
        "Setting levels: control = 1, case = 2\nSetting direction: controls < cases\n",
        "> ",
        "# AUC",
        "> ",
        "AUC <- round(auc(ROC), 3)",
        "> ",
        "plotROC <- ggplot(data = data.frame(1 - ROC$specificity, ROC$sensitivity), ",
        "+ ",
        "                  aes(x = 1 - ROC$specificity, y = ROC$sensitivity)) +",
        "+ ",
        "  geom_line(color = \"blue\") +",
        "+ ",
        "  geom_abline(slope = 1, intercept = 0, linetype = \"dashed\", color = \"grey\") +",
        "+ ",
        "  labs(x = \"1 - Especificidade\",",
        "+ ",
        "       y = \"Sensitividade\",",
        "+ ",
        "       title = paste(\"Curva ROC (AUC =\", AUC, \")\")) +",
        "+ ",
        "  theme_bw()",
        "> ",
        "ggplotly(plotROC)",
        "Error in ggplotly(plotROC) : \n  não foi possível encontrar a função \"ggplotly\"\n",
        "> ",
        "library(plotly)",
        "\nAttaching package: ‘plotly’\n\nThe following object is masked from ‘package:ggplot2’:\n\n    last_plot\n\nThe following object is masked from ‘package:stats’:\n\n    filter\n\nThe following object is masked from ‘package:graphics’:\n\n    layout\n\nWarning message:\npackage ‘plotly’ was built under R version 4.3.3 \n",
        "> ",
        "ggplotly(plotROC)",
        "Error in order(data[[\"x\"]]) : argumento 1 não é um vetor\n",
        "> ",
        "library(ggplot2)",
        "> ",
        "library(plotly)",
        "> ",
        "# AUC",
        "> ",
        "AUC <- round(auc(ROC), 3)",
        "> ",
        "library(ggplot2)",
        "> ",
        "library(pROC)",
        "> ",
        "> ",
        "# Plot da curva ROC e AUC",
        "> ",
        "plotROC <- ggplot(ROC, aes(x = 1 - specificity, y = sensitivity)) +",
        "+ ",
        "  geom_line(color = \"blue\") +",
        "+ ",
        "  geom_abline(slope = 1, intercept = 0, linetype = \"dashed\", color = \"grey\") +",
        "+ ",
        "  labs(x = \"1 - Especificidade\",",
        "+ ",
        "       y = \"Sensitividade\",",
        "+ ",
        "       title = paste(\"Curva ROC (AUC =\", round(ROC$auc, 3), \")\")) +",
        "+ ",
        "  theme_bw()",
        "\u001B[1m\u001B[33mError\u001B[39m in `fortify()`:\u001B[22m\n\u001B[38;5;232m\u001B[33m!\u001B[38;5;232m `data` must be a \u001B[34m<data.frame>\u001B[38;5;232m, or an object coercible by `fortify()`, or a valid \u001B[34m<data.frame>\u001B[38;5;232m-like\n  object coercible by `as.data.frame()`.\u001B[39m\n\u001B[1mCaused by error in `.prevalidate_data_frame_like_object()`:\u001B[22m\n\u001B[38;5;232m\u001B[33m!\u001B[38;5;232m `dim(data)` must return an \u001B[34m<integer>\u001B[38;5;232m of length 2.\u001B[39m\n\u001B[90mRun `\u001B]8;;rstudio:run:rlang::last_trace()\u0007rlang::last_trace()\u001B]8;;\u0007` to see where the error",
        " occurred.\u001B[39m\n",
        "> ",
        "library(ggplot2)",
        "> ",
        "library(pROC)",
        "> ",
        "> ",
        "# Plot da curva ROC e AUC",
        "> ",
        "plotROC <- ggplot(ROC, aes(x = 1 - specificity, y = sensitivity)) +",
        "+ ",
        "  geom_line(color = \"blue\") +",
        "+ ",
        "  geom_abline(slope = 1, intercept = 0, linetype = \"dashed\", color = \"grey\") +",
        "+ ",
        "  labs(x = \"1 - Especificidade\",",
        "+ ",
        "       y = \"Sensitividade\",",
        "+ ",
        "       title = paste(\"Curva ROC (AUC =\", round(ROC$auc, 3), \")\")) +",
        "+ ",
        "  theme_bw()",
        "\u001B[1m\u001B[33mError\u001B[39m in `fortify()`:\u001B[22m\n\u001B[38;5;232m\u001B[33m!\u001B[38;5;232m `data` must be a \u001B[34m<data.frame>\u001B[38;5;232m, or an object coercible by `fortify()`, or a valid \u001B[34m<data.frame>\u001B[38;5;232m-like\n  object coercible by `as.data.frame()`.\u001B[39m\n\u001B[1mCaused by error in `.prevalidate_data_frame_like_object()`:\u001B[22m\n\u001B[38;5;232m\u001B[33m!\u001B[38;5;232m `dim(data)` must return an \u001B[34m<integer>\u001B[38;5;232m of length 2.\u001B[39m\n\u001B[90mRun `\u001B]8;;rstudio:run:rlang::last_trace()\u0007rlang::last_trace()\u001B]8;;\u0007` to see where the error",
        " occurred.\u001B[39m\n",
        "> ",
        "# Curva ROC (base de treino)",
        "> ",
        "ROC <- roc(response = as.numeric(treino$ativo),  # Convertendo para binário: \"1\" -> 1, \"0\" -> 0",
        "+ ",
        "           predictor = preditos_treino[, \"1\"])",
        "Setting levels: control = 1, case = 2\nSetting direction: controls < cases\n",
        "> ",
        "View(treino)",
        "> ",
        "View(ROC)",
        "> ",
        "# AUC",
        "> ",
        "AUC <- round(auc(ROC), 3)",
        "> ",
        "str(ROC)",
        "List of 15\n $ percent           : logi FALSE\n $ sensitivities     : num [1:7] 1 1 0.998 0.995 0.982 ...\n $ specificities     : num [1:7] 0 0.776 0.933 0.987 0.99 ...\n $ thresholds        : num [1:7] -Inf 0.00488 0.03662 0.3779 0.84296 ...\n $ direction         : chr \"<\"\n $ cases             : Named num [1:1321] 0.994 0.994 0.994 0.994 0.994 ...\n  ..- attr(*, \"names\")= chr [1:1321] \"1\" \"2\" \"3\" \"4\" ...\n $ controls          : Named num [1:526] 0.06349 0.00976 0.06349 0.06349 0.06349 ...\n  ..- attr(*, \"names\")= ",
        "chr [1:526] \"11\" \"13\" \"32\" \"77\" ...\n $ fun.sesp          :function (thresholds, controls, cases, direction)  \n $ auc               : 'auc' num 0.995\n  ..- attr(*, \"partial.auc\")= logi FALSE\n  ..- attr(*, \"percent\")= logi FALSE\n  ..- attr(*, \"roc\")=List of 15\n  .. ..$ percent           : logi FALSE\n  .. ..$ sensitivities     : num [1:7] 1 1 0.998 0.995 0.982 ...\n  .. ..$ specificities     : num [1:7] 0 0.776 0.933 0.987 0.99 ...\n  .. ..$ thresholds        : num [1:7] -Inf 0.00488 0.03662 0.3779 0.84296 ...\n ",
        " .. ..$ direction         : chr \"<\"\n  .. ..$ cases             : Named num [1:1321] 0.994 0.994 0.994 0.994 0.994 ...\n  .. .. ..- attr(*, \"names\")= chr [1:1321] \"1\" \"2\" \"3\" \"4\" ...\n  .. ..$ controls          : Named num [1:526] 0.06349 0.00976 0.06349 0.06349 0.06349 ...\n  .. .. ..- attr(*, \"names\")= chr [1:526] \"11\" \"13\" \"32\" \"77\" ...\n  .. ..$ fun.sesp          :function (thresholds, controls, cases, direction)  \n  .. ..$ auc               : 'auc' num 0.995\n  .. .. ..- attr(*, \"partial.auc\")= logi FALSE\n  ",
        ".. .. ..- attr(*, \"percent\")= logi FALSE\n  .. .. ..- attr(*, \"roc\")=List of 8\n  .. .. .. ..$ percent      : logi FALSE\n  .. .. .. ..$ sensitivities: num [1:7] 1 1 0.998 0.995 0.982 ...\n  .. .. .. ..$ specificities: num [1:7] 0 0.776 0.933 0.987 0.99 ...\n  .. .. .. ..$ thresholds   : num [1:7] -Inf 0.00488 0.03662 0.3779 0.84296 ...\n  .. .. .. ..$ direction    : chr \"<\"\n  .. .. .. ..$ cases        : Named num [1:1321] 0.994 0.994 0.994 0.994 0.994 ...\n  .. .. .. .. ..- attr(*, \"names\")= chr [1:1321] \"1\" \"2\" ",
        "\"3\" \"4\" ...\n  .. .. .. ..$ controls     : Named num [1:526] 0.06349 0.00976 0.06349 0.06349 0.06349 ...\n  .. .. .. .. ..- attr(*, \"names\")= chr [1:526] \"11\" \"13\" \"32\" \"77\" ...\n  .. .. .. ..$ fun.sesp     :function (thresholds, controls, cases, direction)  \n  .. .. .. ..- attr(*, \"class\")= chr \"roc\"\n  .. ..$ call              : language roc.default(response = as.numeric(treino$ativo), predictor = preditos_treino[, \"1\"])\n  .. ..$ original.predictor: Named num [1:1847] 0.994 0.994 0.994 0.994 0.994 ...\n  .. ..",
        " ..- attr(*, \"names\")= chr [1:1847] \"1\" \"2\" \"3\" \"4\" ...\n  .. ..$ original.response : num [1:1847] 2 2 2 2 2 2 2 2 2 2 ...\n  .. ..$ predictor         : Named num [1:1847] 0.994 0.994 0.994 0.994 0.994 ...\n  .. .. ..- attr(*, \"names\")= chr [1:1847] \"1\" \"2\" \"3\" \"4\" ...\n  .. ..$ response          : num [1:1847] 2 2 2 2 2 2 2 2 2 2 ...\n  .. ..$ levels            : chr [1:2] \"1\" \"2\"\n  .. ..- attr(*, \"class\")= chr \"roc\"\n $ call              : language roc.default(response = as.numeric(treino$ativo), predictor = pr",
        "editos_treino[, \"1\"])\n $ original.predictor: Named num [1:1847] 0.994 0.994 0.994 0.994 0.994 ...\n  ..- attr(*, \"names\")= chr [1:1847] \"1\" \"2\" \"3\" \"4\" ...\n $ original.response : num [1:1847] 2 2 2 2 2 2 2 2 2 2 ...\n $ predictor         : Named num [1:1847] 0.994 0.994 0.994 0.994 0.994 ...\n  ..- attr(*, \"names\")= chr [1:1847] \"1\" \"2\" \"3\" \"4\" ...\n $ response          : num [1:1847] 2 2 2 2 2 2 2 2 2 2 ...\n $ levels            : chr [1:2] \"1\" \"2\"\n - attr(*, \"class\")= chr \"roc\"\n",
        "> ",
        "plotROC <- ggplot(ROC, aes(x = 1 - specificity, y = sensitivity)) +",
        "+ ",
        "  geom_line(color = \"blue\") +",
        "+ ",
        "  geom_abline(slope = 1, intercept = 0, linetype = \"dashed\", color = \"grey\") +",
        "+ ",
        "  labs(x = \"1 - Especificidade\",",
        "+ ",
        "       y = \"Sensitividade\",",
        "+ ",
        "       title = paste(\"Curva ROC (AUC =\", round(ROC$auc, 3), \")\")) +",
        "+ ",
        "  theme_bw()",
        "\u001B[1m\u001B[33mError\u001B[39m in `fortify()`:\u001B[22m\n\u001B[38;5;232m\u001B[33m!\u001B[38;5;232m `data` must be a \u001B[34m<data.frame>\u001B[38;5;232m, or an object coercible by `fortify()`, or a valid \u001B[34m<data.frame>\u001B[38;5;232m-like\n  object coercible by `as.data.frame()`.\u001B[39m\n\u001B[1mCaused by error in `.prevalidate_data_frame_like_object()`:\u001B[22m\n\u001B[38;5;232m\u001B[33m!\u001B[38;5;232m `dim(data)` must return an \u001B[34m<integer>\u001B[38;5;232m of length 2.\u001B[39m\n\u001B[90mRun `\u001B]8;;rstudio:run:rlang::last_trace()\u0007rlang::last_trace()\u001B]8;;\u0007` to see where the error",
        " occurred.\u001B[39m\n",
        "> ",
        "plotROC <- ggplot(data = data.frame(1 - ROC$specificities, ROC$sensitivities),",
        "+ ",
        "                  aes(x = `1 - ROC$specificities`, y = ROC$sensitivities)) +",
        "+ ",
        "  geom_line(color = \"blue\") +",
        "+ ",
        "  geom_abline(slope = 1, intercept = 0, linetype = \"dashed\", color = \"grey\") +",
        "+ ",
        "  labs(x = \"1 - Especificidade\",",
        "+ ",
        "       y = \"Sensitividade\",",
        "+ ",
        "       title = paste(\"Curva ROC (AUC =\", round(ROC$auc, 3), \")\")) +",
        "+ ",
        "  theme_bw()",
        "> ",
        "print(plotROC)",
        "\u001B[1m\u001B[33mError\u001B[39m in `geom_line()`:\u001B[22m\n\u001B[38;5;232m\u001B[33m!\u001B[38;5;232m Problem while computing aesthetics.\n\u001B[36mℹ\u001B[38;5;232m Error occurred in the 1st layer.\u001B[39m\n\u001B[1mCaused by error:\u001B[22m\n\u001B[33m!\u001B[39m objeto '1 - ROC$specificities' não encontrado\n\u001B[90mRun `\u001B]8;;rstudio:run:rlang::last_trace()\u0007rlang::last_trace()\u001B]8;;\u0007` to see where the error occurred.\u001B[39m\n",
        "> ",
        "ROC <- roc(response = as.numeric(treino$ativo),  # Convertendo para binário: \"1\" -> 1, \"0\" -> 0",
        "+ ",
        "           predictor = preditos_treino[, \"1\"])",
        "Setting levels: control = 1, case = 2\nSetting direction: controls < cases\n",
        "> ",
        "AUC <- round(auc(ROC), 3)",
        "> ",
        "roc_data <- data.frame(",
        "+ ",
        "  specificity = 1 - ROC$specificities,",
        "+ ",
        "  sensitivity = ROC$sensitivities",
        "+ ",
        ")",
        "> ",
        "#chamando novamente as bibliotecas",
        "> ",
        "library(ggplot2)",
        "> ",
        "library(pROC)",
        "> ",
        "# Plot da curva ROC e AUC",
        "> ",
        "plotROC <- ggplot(data = data.frame(1 - ROC$specificities, ROC$sensitivities),",
        "+ ",
        "                  aes(x = `1 - ROC$specificities`, y = ROC$sensitivities)) +",
        "+ ",
        "  geom_line(color = \"blue\") +",
        "+ ",
        "  geom_abline(slope = 1, intercept = 0, linetype = \"dashed\", color = \"grey\") +",
        "+ ",
        "  labs(x = \"1 - Especificidade\",",
        "+ ",
        "       y = \"Sensitividade\",",
        "+ ",
        "       title = paste(\"Curva ROC (AUC =\", round(ROC$auc, 3), \")\")) +",
        "+ ",
        "  theme_bw()",
        "> ",
        "print(plotROC)",
        "\u001B[1m\u001B[33mError\u001B[39m in `geom_line()`:\u001B[22m\n\u001B[38;5;232m\u001B[33m!\u001B[38;5;232m Problem while computing aesthetics.\n\u001B[36mℹ\u001B[38;5;232m Error occurred in the 1st layer.\u001B[39m\n\u001B[1mCaused by error:\u001B[22m\n\u001B[33m!\u001B[39m objeto '1 - ROC$specificities' não encontrado\n\u001B[90mRun `\u001B]8;;rstudio:run:rlang::last_trace()\u0007rlang::last_trace()\u001B]8;;\u0007` to see where the error occurred.\u001B[39m\n",
        "> ",
        " Curva ROC (base de treino)",
        "Erro: unexpected symbol em \" Curva ROC\"\n",
        "> ",
        "ROC <- roc(response = as.numeric(treino$ativo),  # Convertendo para binário: \"1\" -> 1, \"0\" -> 0",
        "+ ",
        "           predictor = preditos_treino[, \"1\"])",
        "Setting levels: control = 1, case = 2\nSetting direction: controls < cases\n",
        "> ",
        "plotROC <- ggplot(data = data.frame(1 - ROC$specificities, ROC$sensitivities),",
        "+ ",
        "                  aes(x = `1 - ROC$specificities`, y = ROC$sensitivities)) +",
        "+ ",
        "  geom_line(color = \"blue\") +",
        "+ ",
        "  geom_abline(slope = 1, intercept = 0, linetype = \"dashed\", color = \"grey\") +",
        "+ ",
        "  labs(x = \"1 - Especificidade\",",
        "+ ",
        "       y = \"Sensitividade\",",
        "+ ",
        "       title = paste(\"Curva ROC (AUC =\", round(ROC$auc, 3), \")\")) +",
        "+ ",
        "  theme_bw()",
        "> ",
        "print(plotROC)",
        "\u001B[1m\u001B[33mError\u001B[39m in `geom_line()`:\u001B[22m\n\u001B[38;5;232m\u001B[33m!\u001B[38;5;232m Problem while computing aesthetics.\n\u001B[36mℹ\u001B[38;5;232m Error occurred in the 1st layer.\u001B[39m\n\u001B[1mCaused by error:\u001B[22m\n\u001B[33m!\u001B[39m objeto '1 - ROC$specificities' não encontrado\n\u001B[90mRun `\u001B]8;;rstudio:run:rlang::last_trace()\u0007rlang::last_trace()\u001B]8;;\u0007` to see where the error occurred.\u001B[39m\n",
        "> ",
        "ROC <- roc(response = as.numeric(treino$ativo),  # Convertendo para binário: \"1\" -> 1, \"0\" -> 0",
        "+ ",
        "           predictor = preditos_treino[, \"1\"])",
        "Setting levels: control = 1, case = 2\nSetting direction: controls < cases\n",
        "> ",
        "roc_data <- data.frame(",
        "+ ",
        "  specificity = 1 - ROC$specificities,",
        "+ ",
        "  sensitivity = ROC$sensitivities",
        "+ ",
        ")",
        "> ",
        "plotROC <- ggplot(data = data.frame(1 - ROC$specificities, ROC$sensitivities),",
        "+ ",
        "                  aes(x = `1 - ROC$specificities`, y = ROC$sensitivities)) +",
        "+ ",
        "  geom_line(color = \"blue\") +",
        "+ ",
        "  geom_abline(slope = 1, intercept = 0, linetype = \"dashed\", color = \"grey\") +",
        "+ ",
        "  labs(x = \"1 - Especificidade\",",
        "+ ",
        "       y = \"Sensitividade\",",
        "+ ",
        "       title = paste(\"Curva ROC (AUC =\", round(ROC$auc, 3), \")\")) +",
        "+ ",
        "  theme_bw()",
        "> ",
        "print(plotROC)",
        "\u001B[1m\u001B[33mError\u001B[39m in `geom_line()`:\u001B[22m\n\u001B[38;5;232m\u001B[33m!\u001B[38;5;232m Problem while computing aesthetics.\n\u001B[36mℹ\u001B[38;5;232m Error occurred in the 1st layer.\u001B[39m\n\u001B[1mCaused by error:\u001B[22m\n\u001B[33m!\u001B[39m objeto '1 - ROC$specificities' não encontrado\n\u001B[90mRun `\u001B]8;;rstudio:run:rlang::last_trace()\u0007rlang::last_trace()\u001B]8;;\u0007` to see where the error occurred.\u001B[39m\n",
        "> ",
        "ROC <- roc(response = as.numeric(treino$ativo),  # Convertendo para binário: \"1\" -> 1, \"0\" -> 0",
        "+ ",
        "           predictor = preditos_treino[, \"1\"])",
        "Setting levels: control = 1, case = 2\nSetting direction: controls < cases\n",
        "> ",
        "> ",
        "# Criar um data frame para plotagem da curva ROC",
        "> ",
        "roc_data <- data.frame(",
        "+ ",
        "  specificity = 1 - ROC$specificities,",
        "+ ",
        "  sensitivity = ROC$sensitivities",
        "+ ",
        ")",
        "> ",
        "> ",
        "# Plot da curva ROC",
        "> ",
        "plotROC <- ggplot(data = roc_data, aes(x = specificity, y = sensitivity)) +",
        "+ ",
        "  geom_line(color = \"blue\") +",
        "+ ",
        "  geom_abline(slope = 1, intercept = 0, linetype = \"dashed\", color = \"grey\") +",
        "+ ",
        "  labs(x = \"1 - Especificidade\",",
        "+ ",
        "       y = \"Sensitividade\",",
        "+ ",
        "       title = paste(\"Curva ROC (AUC =\", round(ROC$auc, 3), \")\")) +",
        "+ ",
        "  theme_bw()",
        "> ",
        "> ",
        "# Exibir o plot",
        "> ",
        "print(plotROC)",
        "> ",
        "imp_arvore <- data.frame(importancia = arvore$variable.importance) %>% ",
        "+ ",
        "  rownames_to_column() %>% ",
        "+ ",
        "  arrange(importancia) %>% ",
        "+ ",
        "  rename(variavel = rowname) %>%",
        "+ ",
        "  mutate(variavel = fct_inorder(variavel))",
        "Error in rownames_to_column(.) : \n  não foi possível encontrar a função \"rownames_to_column\"\n",
        "> ",
        "library(tibble)",
        "> ",
        "imp_arvore <- data.frame(importancia = arvore$variable.importance) %>% ",
        "+ ",
        "  rownames_to_column() %>% ",
        "+ ",
        "  arrange(importancia) %>% ",
        "+ ",
        "  rename(variavel = rowname) %>%",
        "+ ",
        "  mutate(variavel = fct_inorder(variavel))",
        "\u001B[1m\u001B[33mError\u001B[39m in `mutate()`:\u001B[22m\n\u001B[38;5;232m\u001B[36mℹ\u001B[38;5;232m In argument: `variavel = fct_inorder(variavel)`.\u001B[39m\n\u001B[1mCaused by error in `fct_inorder()`:\u001B[22m\n\u001B[33m!\u001B[39m não foi possível encontrar a função \"fct_inorder\"\n\u001B[90mRun `\u001B]8;;rstudio:run:rlang::last_trace()\u0007rlang::last_trace()\u001B]8;;\u0007` to see where the error occurred.\u001B[39m\n",
        "> ",
        "library(dplyr)   # Para mutate, arrange, rename",
        "\nAttaching package: ‘dplyr’\n\nThe following objects are masked from ‘package:stats’:\n\n    filter, lag\n\nThe following objects are masked from ‘package:base’:\n\n    intersect, setdiff, setequal, union\n\n",
        "> ",
        "library(forcats)  # Para fct_inorder",
        "> ",
        "imp_arvore <- data.frame(importancia = arvore$variable.importance) %>% ",
        "+ ",
        "  rownames_to_column() %>% ",
        "+ ",
        "  arrange(importancia) %>% ",
        "+ ",
        "  rename(variavel = rowname) %>%",
        "+ ",
        "  mutate(variavel = fct_inorder(variavel))",
        "> ",
        "# Plotar a importância das variáveis",
        "> ",
        "ggplot(imp_arvore) +",
        "+ ",
        "  geom_segment(aes(x = variavel, y = 0, xend = variavel, yend = importancia), ",
        "+ ",
        "               linewidth = 1.5, alpha = 0.7) +  # Substituir 'size' por 'linewidth'",
        "+ ",
        "  geom_point(aes(x = variavel, y = importancia, col = variavel), ",
        "+ ",
        "             size = 4, show.legend = FALSE) +",
        "+ ",
        "  coord_flip() +",
        "+ ",
        "  labs(x = \"Variável\", y = \"Importância\") +",
        "+ ",
        "  theme_bw()",
        "> ",
        "# Valores preditos pela árvore (base de teste)",
        "> ",
        "preditos_teste <- predict(arvore, teste)",
        "> ",
        "> ",
        "# Classificando os valores preditos com base no cutoff",
        "> ",
        "preditos_class_teste = factor(ifelse(preditos_teste[,2] > cutoff, 1, 0))",
        "> ",
        "> ",
        "# Matriz de confusão para o cutoff estabelecido na base de teste",
        "> ",
        "conf_matrix_teste <-confusionMatrix(data = preditos_class_teste,",
        "+ ",
        "                               reference = teste$ativo, ",
        "+ ",
        "                               positive = \"1\")",
        "> ",
        "# Extração de precisão e recall da matriz de confusão",
        "> ",
        "precision_teste <- conf_matrix_teste$byClass[\"Pos Pred Value\"]  # Precisão",
        "> ",
        "recall_teste <- conf_matrix_teste$byClass[\"Sensitivity\"]        # Recall",
        "> ",
        "> ",
        "# Imprimindo os resultados de precisão e recall",
        "> ",
        "print(paste(\"Precisão:\", precision_teste))",
        "[1] \"Precisão: 0.0346320346320346\"\n",
        "> ",
        "print(paste(\"Recall:\", recall_teste))",
        "[1] \"Recall: 0.0141592920353982\"\n",
        "> ",
        "print(paste(\"Precisão:\", precision_teste))",
        "[1] \"Precisão: 0.0346320346320346\"\n",
        "> ",
        "print(paste(\"Recall:\", recall_teste))",
        "[1] \"Recall: 0.0141592920353982\"\n",
        "> ",
        "> ",
        "# Função para plotar matriz de confusão",
        "> ",
        "plot_confusion <- function(conf_matrix, title) {",
        "+ ",
        "  conf_df <- as.data.frame(conf_matrix$table)",
        "+ ",
        "  conf_df$Reference <- factor(conf_df$Reference, levels = c(\"0\", \"1\"))",
        "+ ",
        "  conf_df$Prediction <- factor(conf_df$Prediction, levels = c(\"0\", \"1\"))",
        "+ ",
        "  ",
        "+ ",
        "  ggplot(data = conf_df, aes(x = Reference, y = Prediction, fill = as.factor(Freq))) +",
        "+ ",
        "    geom_tile() +",
        "+ ",
        "    geom_text(aes(label = sprintf(\"%1.0f\", Freq)), vjust = 1) +",
        "+ ",
        "    labs(x = \"Valor Real\", y = \"Valor Previsto\", fill = \"Contagem\", title = title) +",
        "+ ",
        "    scale_fill_gradient(low = \"white\", high = \"blue\", na.value = \"grey50\", aesthetics = \"colour\") +  # Ajuste na escala de cores",
        "+ ",
        "    theme_bw() +",
        "+ ",
        "    theme(axis.text.x = element_text(angle = 45, hjust = 1))",
        "+ ",
        "}",
        "> ",
        "> ",
        "# Plot da matriz de confusão para o conjunto de treino e teste",
        "> ",
        "plot_confusion(conf_matrix_treino, \"Matriz de Confusão - Treino\")",
        "> ",
        "plot_confusion(conf_matrix_teste, \"Matriz de Confusão - Teste\")",
        "> ",
        "library(caret)",
        "> ",
        "library(randomForest)",
        "randomForest 4.7-1.1\nType rfNews() to see new features/changes/bug fixes.\n\nAttaching package: ‘randomForest’\n\nThe following object is masked from ‘package:dplyr’:\n\n    combine\n\nThe following object is masked from ‘package:ggplot2’:\n\n    margin\n\nWarning message:\npackage ‘randomForest’ was built under R version 4.3.3 \n",
        "> ",
        "treino$vendas_30_dias <- as.integer(as.character(treino$vendas_30_dias))",
        "> ",
        "teste$vendas_30_dias <- as.integer(as.character(teste$vendas_30_dias))",
        "> ",
        "set.seed(100)",
        "> ",
        "> ",
        "random_forest <- randomForest(ativo ~.,",
        "+ ",
        "                              data = treino,",
        "+ ",
        "                              importance=TRUE,",
        "+ ",
        "                              ntree = 200,",
        "+ ",
        "                              mtry = 2)",
        "> ",
        "# Calcular as previsões de classe para o conjunto de treino",
        "> ",
        "preditos_treino_rf_class <- predict(random_forest, newdata = treino, type = \"response\")",
        "> ",
        "> ",
        "# Calcular as probabilidades preditas para a classe positiva (ativo = 1)",
        "> ",
        "preditos_treino_rf_prob <- predict(random_forest, newdata = treino, type = \"prob\")",
        "> ",
        "# Matriz de confusão para a amostra de treino",
        "> ",
        "confusionMatrix(data = preditos_treino_rf_class,",
        "+ ",
        "                reference = treino$ativo, ",
        "+ ",
        "                positive = \"1\")",
        "Confusion Matrix and Statistics\n\n          Reference\nPrediction    0    1\n         0  523    3\n         1    3 1318\n                                          \n               Accuracy : 0.9968          \n                 95% CI : (0.9929, 0.9988)\n    No Information Rate : 0.7152          \n    P-Value [Acc > NIR] : <2e-16          \n                                          \n                  Kappa : 0.992           \n                                          \n Mcnemar's Test P-Value : 1               \n         ",
        "                                 \n            Sensitivity : 0.9977          \n            Specificity : 0.9943          \n         Pos Pred Value : 0.9977          \n         Neg Pred Value : 0.9943          \n             Prevalence : 0.7152          \n         Detection Rate : 0.7136          \n   Detection Prevalence : 0.7152          \n      Balanced Accuracy : 0.9960          \n                                          \n       'Positive' Class : 1               \n                                          \n",
        "> ",
        "library(pROC)",
        "> ",
        "library(ggplot2)",
        "> ",
        "library(plotly)",
        "> ",
        "# Curva ROC (amostra de treino)",
        "> ",
        "ROC <- roc(response = treino$ativo, ",
        "+ ",
        "           predictor = preditos_treino_rf_prob[,2])",
        "Setting levels: control = 0, case = 1\nSetting direction: controls < cases\n",
        "> ",
        "> ",
        "ggplotly(",
        "+ ",
        "  ggroc(ROC, color = \"red\", linewidth = 0.7) +",
        "+ ",
        "    geom_segment(aes(x = 1, xend = 0, y = 0, yend = 1),",
        "+ ",
        "                 color=\"grey\",",
        "+ ",
        "                 linewidth = 0.2) +",
        "+ ",
        "    labs(x = \"Especificidade\",",
        "+ ",
        "         y = \"Sensitividade\",",
        "+ ",
        "         title = paste(\"Área abaixo da curva (AUC):\",",
        "+ ",
        "                       round(ROC$auc, 5))) +",
        "+ ",
        "    theme_bw())",
        "Warning message:\nIn geom_segment(aes(x = 1, xend = 0, y = 0, yend = 1), color = \"grey\",  :\n  \u001B[38;5;232mAll aesthetics have length 1, but the data has 99 rows.\n\u001B[36mℹ\u001B[38;5;232m Please consider using `annotate()` or provide this layer with data containing a single row.\u001B[39m\n",
        "> ",
        "plotROC <- ggplot(data = data.frame(specificity = ROC$specificities, sensitivity = ROC$sensitivities),",
        "+ ",
        "                  aes(x = 1 - specificity, y = sensitivity)) +",
        "+ ",
        "  geom_line(color = \"red\", size = 0.7) +",
        "+ ",
        "  annotate(\"segment\", x = 0, xend = 1, y = 0, yend = 1, color = \"grey\", size = 0.2, linetype = \"dashed\") +",
        "+ ",
        "  labs(x = \"Especificidade\",",
        "+ ",
        "       y = \"Sensitividade\",",
        "+ ",
        "       title = paste(\"Área abaixo da curva (AUC):\", round(ROC$auc, 5))) +",
        "+ ",
        "  theme_bw()",
        "Warning message:\n\u001B[38;5;232mUsing `size` aesthetic for lines was deprecated in ggplot2 3.4.0.\n\u001B[36mℹ\u001B[38;5;232m Please use `linewidth` instead.\n\u001B[90mThis warning is displayed once every 8 hours.\u001B[38;5;232m\n\u001B[90mCall `lifecycle::last_lifecycle_warnings()` to see where this warning was generated.\u001B[38;5;232m\u001B[39m \n",
        "> ",
        "plotROC <- ggplot(data = data.frame(specificity = ROC$specificities, sensitivity = ROC$sensitivities),",
        "+ ",
        "                  aes(x = 1 - specificity, y = sensitivity)) +",
        "+ ",
        "  geom_line(color = \"red\", size = 0.7, show.legend = FALSE) +",
        "+ ",
        "  annotate(\"segment\", x = 0, xend = 1, y = 0, yend = 1, color = \"grey\", linewidth = 0.2, linetype = \"dashed\") +",
        "+ ",
        "  labs(x = \"Especificidade\",",
        "+ ",
        "       y = \"Sensitividade\",",
        "+ ",
        "       title = paste(\"Área abaixo da curva (AUC):\", round(ROC$auc, 5))) +",
        "+ ",
        "  theme_bw()",
        "> ",
        "# Plot da curva ROC usando ggplot2",
        "> ",
        "plotROC <- ggplot(data = data.frame(specificity = ROC$specificities, sensitivity = ROC$sensitivities),",
        "+ ",
        "                  aes(x = 1 - specificity, y = sensitivity)) +",
        "+ ",
        "  geom_line(color = \"red\", size = 0.7, show.legend = FALSE) +",
        "+ ",
        "  annotate(\"segment\", x = 0, xend = 1, y = 0, yend = 1, color = \"grey\", linewidth = 0.2, linetype = \"dashed\") +",
        "+ ",
        "  labs(x = \"Especificidade\",",
        "+ ",
        "       y = \"Sensitividade\",",
        "+ ",
        "       title = paste(\"Área abaixo da curva (AUC):\", round(ROC$auc, 5))) +",
        "+ ",
        "  theme_bw()",
        "> ",
        "# Converter para plotly",
        "> ",
        "ggplotly(plotROC)",
        "> ",
        "imp_rf <- data.frame(random_forest$importance) %>% ",
        "+ ",
        "  rownames_to_column() %>% ",
        "+ ",
        "  arrange(MeanDecreaseGini) %>% ",
        "+ ",
        "  select(rowname, MeanDecreaseGini) %>% ",
        "+ ",
        "  rename(variavel = rowname, importancia = MeanDecreaseGini) %>% ",
        "+ ",
        "  mutate(variavel = fct_inorder(variavel))",
        "> ",
        "> ",
        "ggplot(imp_rf) +",
        "+ ",
        "  geom_segment(aes(x = variavel, y = 0, xend = variavel, yend = importancia), ",
        "+ ",
        "               size = 1.5, alpha = 0.7) +",
        "+ ",
        "  geom_point(aes(x = variavel, y = importancia, col = variavel), ",
        "+ ",
        "             size = 4, show.legend = F) +",
        "+ ",
        "  coord_flip() +",
        "+ ",
        "  labs(x = \"Variável\", y = \"Importância\") +",
        "+ ",
        "  theme_bw()",
        "> ",
        "# Investigando se há overfitting",
        "> ",
        "> ",
        "# Valores preditos pela random forest (base de teste)",
        "> ",
        "preditos_teste_rf_class <- predict(random_forest, teste)",
        "> ",
        "> ",
        "# Matriz de confusão para a amostra de teste",
        "> ",
        "confusionMatrix(data = preditos_teste_rf_class,",
        "+ ",
        "                reference = teste$ativo, ",
        "+ ",
        "                positive = \"1\")",
        "Confusion Matrix and Statistics\n\n          Reference\nPrediction   0   1\n         0 222   7\n         1   3 558\n                                          \n               Accuracy : 0.9873          \n                 95% CI : (0.9768, 0.9939)\n    No Information Rate : 0.7152          \n    P-Value [Acc > NIR] : <2e-16          \n                                          \n                  Kappa : 0.9691          \n                                          \n Mcnemar's Test P-Value : 0.3428          \n               ",
        "                           \n            Sensitivity : 0.9876          \n            Specificity : 0.9867          \n         Pos Pred Value : 0.9947          \n         Neg Pred Value : 0.9694          \n             Prevalence : 0.7152          \n         Detection Rate : 0.7063          \n   Detection Prevalence : 0.7101          \n      Balanced Accuracy : 0.9871          \n                                          \n       'Positive' Class : 1               \n                                          \n",
        "> ",
        "install.packages(\"xgboost\")",
        "WARNING: Rtools is required to build R packages but is not currently installed. Please download and install the appropriate version of Rtools before proceeding:\n\nhttps://cran.rstudio.com/bin/windows/Rtools/\nInstalling package into ‘C:/Users/NTB-073/AppData/Local/R/win-library/4.3’\n(as ‘lib’ is unspecified)\ntentando a URL 'https://cran.rstudio.com/bin/windows/contrib/4.3/xgboost_1.7.7.1.zip'\nContent type 'application/zip' length 2441214 bytes (2.3 MB)\ndownloaded 2.3 MB\n\n",
        "package ‘xgboost’ successfully unpacked and MD5 sums checked\n\nThe downloaded binary packages are in\n\tC:\\Users\\NTB-073\\AppData\\Local\\Temp\\RtmpiYJpbs\\downloaded_packages\n",
        "> ",
        "install.packages(\"caret\")",
        "Error in install.packages : Updating loaded packages\n",
        "> ",
        "library(xgboost)",
        "\nAttaching package: ‘xgboost’\n\nThe following object is masked from ‘package:dplyr’:\n\n    slice\n\nThe following object is masked from ‘package:plotly’:\n\n    slice\n\nWarning message:\npackage ‘xgboost’ was built under R version 4.3.3 \n",
        "> ",
        "library(caret)",
        "> ",
        "# As variáveis precisam ser separadas e colocadas em matrizes",
        "> ",
        "var_dep_treino <- as.matrix(treino[,4])",
        "> ",
        "var_explica_treino <- as.matrix(var_explica_treino)",
        "Erro: objeto 'var_explica_treino' não encontrado\n",
        "\nRestarting R session...\n\n",
        "> ",
        "install.packages(\"caret\")",
        "WARNING: Rtools is required to build R packages but is not currently installed. Please download and install the appropriate version of Rtools before proceeding:\n\nhttps://cran.rstudio.com/bin/windows/Rtools/\nInstalling package into ‘C:/Users/NTB-073/AppData/Local/R/win-library/4.3’\n(as ‘lib’ is unspecified)\ntentando a URL 'https://cran.rstudio.com/bin/windows/contrib/4.3/caret_6.0-94.zip'\nContent type 'application/zip' length 3577702 bytes (3.4 MB)\ndownloaded 3.4 MB\n\n",
        "package ‘caret’ successfully unpacked and MD5 sums checked\nWarning in install.packages :\n  cannot remove prior installation of package ‘caret’\nWarning in install.packages :\n  problem copying C:\\Users\\NTB-073\\AppData\\Local\\R\\win-library\\4.3\\00LOCK\\caret\\libs\\x64\\caret.dll to C:\\Users\\NTB-073\\AppData\\Local\\R\\win-library\\4.3\\caret\\libs\\x64\\caret.dll: Permission denied\nWarning in install.packages :\n  restored ‘caret’\n\nThe downloaded binary packages are in\n\tC:\\Users\\NTB-073\\AppData\\Local\\Temp\\RtmpGM8",
        "yGN\\downloaded_packages\n",
        "> ",
        "var_dep_treino <- as.matrix(treino[,4])",
        "> ",
        "var_explica_treino <- as.matrix(var_explica_treino)",
        "Erro: objeto 'var_explica_treino' não encontrado\n",
        "> ",
        "var_dep_treino <- as.matrix(treino[, 1])  # Variável de resposta \"ativo\"",
        "> ",
        "var_explica_treino <- as.matrix(treino[, -1])  # Todas as outras variáveis exceto a primeira (ativo)",
        "> ",
        "class(var_dep_treino)",
        "[1] \"matrix\" \"array\" \n",
        "> ",
        "set.seed(100)",
        "> ",
        "> ",
        "modelo_xgb <- xgb.cv(",
        "+ ",
        "  data = xgb.DMatrix(data = var_explica_treino, label = var_dep_treino), ",
        "+ ",
        "  nrounds = 100, ",
        "+ ",
        "  eta = 0.10, ",
        "+ ",
        "  max_depth = 7, ",
        "+ ",
        "  nfold = 5, ",
        "+ ",
        "  objective = \"binary:logistic\", ",
        "+ ",
        "  metrics = \"error\", ",
        "+ ",
        "  verbose = 0, ",
        "+ ",
        "  early_stopping_rounds = 10",
        "+ ",
        ")",
        "Error in xgb.cv(data = xgb.DMatrix(data = var_explica_treino, label = var_dep_treino),  : \n  não foi possível encontrar a função \"xgb.cv\"\n",
        "> ",
        "# Estimando o modelo inicial",
        "> ",
        "set.seed(100)",
        "> ",
        "library(xgboost)",
        "Warning message:\npackage ‘xgboost’ was built under R version 4.3.3 \n",
        "> ",
        "set.seed(100)",
        "> ",
        "> ",
        "modelo_xgb <- xgb.cv(",
        "+ ",
        "  data = xgb.DMatrix(data = var_explica_treino, label = var_dep_treino), ",
        "+ ",
        "  nrounds = 100, ",
        "+ ",
        "  eta = 0.10, ",
        "+ ",
        "  max_depth = 7, ",
        "+ ",
        "  nfold = 5, ",
        "+ ",
        "  objective = \"binary:logistic\", ",
        "+ ",
        "  metrics = \"error\", ",
        "+ ",
        "  verbose = 0, ",
        "+ ",
        "  early_stopping_rounds = 10",
        "+ ",
        ")",
        "Error in xgb.DMatrix(data = var_explica_treino, label = var_dep_treino) : \n  'data' has class 'character' and length 27705.\n  'data' accepts either a numeric matrix or a single filename.\n",
        "> ",
        "set.seed(100)",
        "> ",
        "> ",
        "# Convertendo as variáveis explicativas e dependentes para matrizes",
        "> ",
        "dtrain <- xgb.DMatrix(data = var_explica_treino, label = var_dep_treino)",
        "Error in xgb.DMatrix(data = var_explica_treino, label = var_dep_treino) : \n  'data' has class 'character' and length 27705.\n  'data' accepts either a numeric matrix or a single filename.\n",
        "> ",
        "str(treino)",
        "tibble [1,847 × 16] (S3: tbl_df/tbl/data.frame)\n $ ativo                : Factor w/ 2 levels \"0\",\"1\": 2 2 2 2 2 2 2 2 2 2 ...\n $ total_tickets_suporte: num [1:1847] 0 0 0 0 0 0 0 0 0 0 ...\n $ lifetime_ate_churn   : num [1:1847] 0 0 0 0 0 0 0 0 0 0 ...\n $ vendas_30_dias       : int [1:1847] 0 0 0 0 0 0 0 0 0 0 ...\n $ pedidos_30_dias      : num [1:1847] 0 0 0 0 0 0 0 0 0 0 ...\n $ modelo_negocio       : Factor w/ 31 levels \"Açaiteria\",\"Bar / Petiscariaaa\",..: 21 21 25 2 10 14 17 2 10 2 ...\n $ forma_pagamento",
        "      : Factor w/ 4 levels \"\",\"Boleto\",\"Cartão de Crédito\",..: 3 3 3 2 2 2 2 2 2 2 ...\n $ plano_escolhido      : Factor w/ 8 levels \"\",\"Básico\",\"Completo\",..: 4 4 4 4 4 4 4 4 4 4 ...\n $ desconto             : Factor w/ 17 levels \"Ação Fim de Ano (2ª mensalidade gratuita)\",..: 17 17 17 17 17 17 17 17 17 17 ...\n $ franquia             : Factor w/ 3 levels \"\",\"NÃO\",\"SIM\": 2 2 2 2 2 2 2 2 2 2 ...\n $ UF                   : Factor w/ 29 levels \"\",\"AC\",\"AL\",\"AM\",..: 12 9 12 21 28 14 4 28 28 28 ...\n $ canal ",
        "               : Factor w/ 11 levels \"\",\"Automação de Marketing\",..: 6 10 7 6 11 7 6 7 7 7 ...\n $ icp                  : Factor w/ 3 levels \"\",\"Não\",\"Sim\": 2 2 2 2 2 2 2 2 2 2 ...\n $ plano_pagamento      : Factor w/ 5 levels \"\",\"Anual\",\"Mensal\",..: 3 3 3 3 3 3 3 3 3 3 ...\n $ pedidos_delivery     : num [1:1847] 0 0 0 0 0 0 0 0 0 0 ...\n $ vendas_delivery      : num [1:1847] 0 0 0 0 0 0 0 0 0 0 ...\n",
        "> ",
        "# As variáveis precisam ser separadas e colocadas em matrizes",
        "> ",
        "var_explica_treino <- select_if(treino, is.numeric) %>%",
        "+ ",
        "  bind_cols(select_if(treino, is.factor))",
        "Error in select_if(treino, is.numeric) %>% bind_cols(select_if(treino,  : \n  não foi possível encontrar a função \"%>%\"\n",
        "> ",
        "library(xgboost)",
        "> ",
        "library(caret)",
        "Carregando pacotes exigidos: ggplot2\nCarregando pacotes exigidos: lattice\nWarning messages:\n1: package ‘caret’ was built under R version 4.3.3 \n2: package ‘ggplot2’ was built under R version 4.3.3 \n",
        "> ",
        "library(dplyr)",
        "\nAttaching package: ‘dplyr’\n\nThe following object is masked from ‘package:xgboost’:\n\n    slice\n\nThe following objects are masked from ‘package:stats’:\n\n    filter, lag\n\nThe following objects are masked from ‘package:base’:\n\n    intersect, setdiff, setequal, union\n\n",
        "> ",
        "# As variáveis precisam ser separadas e colocadas em matrizes",
        "> ",
        "var_explica_treino <- select_if(treino, is.numeric) %>%",
        "+ ",
        "  bind_cols(select_if(treino, is.factor))",
        "> ",
        "# Convertendo a variável dependente para numeric (se necessário)",
        "> ",
        "var_dep_treino <- as.numeric(var_dep_treino)",
        "> ",
        "> ",
        "# Verificar a estrutura de var_dep_treino",
        "> ",
        "class(var_dep_treino)",
        "[1] \"numeric\"\n",
        "> ",
        "str(treino)",
        "tibble [1,847 × 16] (S3: tbl_df/tbl/data.frame)\n $ ativo                : Factor w/ 2 levels \"0\",\"1\": 2 2 2 2 2 2 2 2 2 2 ...\n $ total_tickets_suporte: num [1:1847] 0 0 0 0 0 0 0 0 0 0 ...\n $ lifetime_ate_churn   : num [1:1847] 0 0 0 0 0 0 0 0 0 0 ...\n $ vendas_30_dias       : int [1:1847] 0 0 0 0 0 0 0 0 0 0 ...\n $ pedidos_30_dias      : num [1:1847] 0 0 0 0 0 0 0 0 0 0 ...\n $ modelo_negocio       : Factor w/ 31 levels \"Açaiteria\",\"Bar / Petiscariaaa\",..: 21 21 25 2 10 14 17 2 10 2 ...\n $ forma_pagamento",
        "      : Factor w/ 4 levels \"\",\"Boleto\",\"Cartão de Crédito\",..: 3 3 3 2 2 2 2 2 2 2 ...\n $ plano_escolhido      : Factor w/ 8 levels \"\",\"Básico\",\"Completo\",..: 4 4 4 4 4 4 4 4 4 4 ...\n $ desconto             : Factor w/ 17 levels \"Ação Fim de Ano (2ª mensalidade gratuita)\",..: 17 17 17 17 17 17 17 17 17 17 ...\n $ franquia             : Factor w/ 3 levels \"\",\"NÃO\",\"SIM\": 2 2 2 2 2 2 2 2 2 2 ...\n $ UF                   : Factor w/ 29 levels \"\",\"AC\",\"AL\",\"AM\",..: 12 9 12 21 28 14 4 28 28 28 ...\n $ canal ",
        "               : Factor w/ 11 levels \"\",\"Automação de Marketing\",..: 6 10 7 6 11 7 6 7 7 7 ...\n $ icp                  : Factor w/ 3 levels \"\",\"Não\",\"Sim\": 2 2 2 2 2 2 2 2 2 2 ...\n $ plano_pagamento      : Factor w/ 5 levels \"\",\"Anual\",\"Mensal\",..: 3 3 3 3 3 3 3 3 3 3 ...\n $ pedidos_delivery     : num [1:1847] 0 0 0 0 0 0 0 0 0 0 ...\n $ vendas_delivery      : num [1:1847] 0 0 0 0 0 0 0 0 0 0 ...\n",
        "> ",
        "# Criando a matriz DMatrix",
        "> ",
        "dtrain <- xgb.DMatrix(data = as.matrix(var_explica_treino), label = var_dep_treino)",
        "Error in xgb.DMatrix(data = as.matrix(var_explica_treino), label = var_dep_treino) : \n  'data' has class 'character' and length 29552.\n  'data' accepts either a numeric matrix or a single filename.\n",
        "> ",
        "# Criando a matriz DMatrix",
        "> ",
        "dtrain <- xgb.DMatrix(data = as.matrix(var_explica_treino), label = var_dep_treino)",
        "Error in xgb.DMatrix(data = as.matrix(var_explica_treino), label = var_dep_treino) : \n  'data' has class 'character' and length 29552.\n  'data' accepts either a numeric matrix or a single filename.\n",
        "> ",
        "str(var_explica_treino)",
        "tibble [1,847 × 16] (S3: tbl_df/tbl/data.frame)\n $ total_tickets_suporte: num [1:1847] 0 0 0 0 0 0 0 0 0 0 ...\n $ lifetime_ate_churn   : num [1:1847] 0 0 0 0 0 0 0 0 0 0 ...\n $ vendas_30_dias       : int [1:1847] 0 0 0 0 0 0 0 0 0 0 ...\n $ pedidos_30_dias      : num [1:1847] 0 0 0 0 0 0 0 0 0 0 ...\n $ pedidos_delivery     : num [1:1847] 0 0 0 0 0 0 0 0 0 0 ...\n $ vendas_delivery      : num [1:1847] 0 0 0 0 0 0 0 0 0 0 ...\n $ ativo                : Factor w/ 2 levels \"0\",\"1\": 2 2 2 2 2 2 2 2 2 2 ...\n $ mode",
        "lo_negocio       : Factor w/ 31 levels \"Açaiteria\",\"Bar / Petiscariaaa\",..: 21 21 25 2 10 14 17 2 10 2 ...\n $ forma_pagamento      : Factor w/ 4 levels \"\",\"Boleto\",\"Cartão de Crédito\",..: 3 3 3 2 2 2 2 2 2 2 ...\n $ plano_escolhido      : Factor w/ 8 levels \"\",\"Básico\",\"Completo\",..: 4 4 4 4 4 4 4 4 4 4 ...\n $ desconto             : Factor w/ 17 levels \"Ação Fim de Ano (2ª mensalidade gratuita)\",..: 17 17 17 17 17 17 17 17 17 17 ...\n $ franquia             : Factor w/ 3 levels \"\",\"NÃO\",\"SIM\": 2 2 2 2",
        " 2 2 2 2 2 2 ...\n $ UF                   : Factor w/ 29 levels \"\",\"AC\",\"AL\",\"AM\",..: 12 9 12 21 28 14 4 28 28 28 ...\n $ canal                : Factor w/ 11 levels \"\",\"Automação de Marketing\",..: 6 10 7 6 11 7 6 7 7 7 ...\n $ icp                  : Factor w/ 3 levels \"\",\"Não\",\"Sim\": 2 2 2 2 2 2 2 2 2 2 ...\n $ plano_pagamento      : Factor w/ 5 levels \"\",\"Anual\",\"Mensal\",..: 3 3 3 3 3 3 3 3 3 3 ...\n",
        "> ",
        "# Convertendo a variável dependente para numeric (se necessário)",
        "> ",
        "var_dep_treino <- as.numeric(var_dep_treino)",
        "> ",
        "str(var_explica_treino)",
        "tibble [1,847 × 16] (S3: tbl_df/tbl/data.frame)\n $ total_tickets_suporte: num [1:1847] 0 0 0 0 0 0 0 0 0 0 ...\n $ lifetime_ate_churn   : num [1:1847] 0 0 0 0 0 0 0 0 0 0 ...\n $ vendas_30_dias       : int [1:1847] 0 0 0 0 0 0 0 0 0 0 ...\n $ pedidos_30_dias      : num [1:1847] 0 0 0 0 0 0 0 0 0 0 ...\n $ pedidos_delivery     : num [1:1847] 0 0 0 0 0 0 0 0 0 0 ...\n $ vendas_delivery      : num [1:1847] 0 0 0 0 0 0 0 0 0 0 ...\n $ ativo                : Factor w/ 2 levels \"0\",\"1\": 2 2 2 2 2 2 2 2 2 2 ...\n $ mode",
        "lo_negocio       : Factor w/ 31 levels \"Açaiteria\",\"Bar / Petiscariaaa\",..: 21 21 25 2 10 14 17 2 10 2 ...\n $ forma_pagamento      : Factor w/ 4 levels \"\",\"Boleto\",\"Cartão de Crédito\",..: 3 3 3 2 2 2 2 2 2 2 ...\n $ plano_escolhido      : Factor w/ 8 levels \"\",\"Básico\",\"Completo\",..: 4 4 4 4 4 4 4 4 4 4 ...\n $ desconto             : Factor w/ 17 levels \"Ação Fim de Ano (2ª mensalidade gratuita)\",..: 17 17 17 17 17 17 17 17 17 17 ...\n $ franquia             : Factor w/ 3 levels \"\",\"NÃO\",\"SIM\": 2 2 2 2",
        " 2 2 2 2 2 2 ...\n $ UF                   : Factor w/ 29 levels \"\",\"AC\",\"AL\",\"AM\",..: 12 9 12 21 28 14 4 28 28 28 ...\n $ canal                : Factor w/ 11 levels \"\",\"Automação de Marketing\",..: 6 10 7 6 11 7 6 7 7 7 ...\n $ icp                  : Factor w/ 3 levels \"\",\"Não\",\"Sim\": 2 2 2 2 2 2 2 2 2 2 ...\n $ plano_pagamento      : Factor w/ 5 levels \"\",\"Anual\",\"Mensal\",..: 3 3 3 3 3 3 3 3 3 3 ...\n",
        "> ",
        "# Convertendo var_explica_treino para matriz numérica",
        "> ",
        "matriz_explica_treino <- as.matrix(var_explica_treino)",
        "> ",
        "# Convertendo var_dep_treino para numeric (se ainda não estiver)",
        "> ",
        "var_dep_treino <- as.numeric(as.character(var_dep_treino))",
        "> ",
        "str(var_explica_treino)",
        "tibble [1,847 × 16] (S3: tbl_df/tbl/data.frame)\n $ total_tickets_suporte: num [1:1847] 0 0 0 0 0 0 0 0 0 0 ...\n $ lifetime_ate_churn   : num [1:1847] 0 0 0 0 0 0 0 0 0 0 ...\n $ vendas_30_dias       : int [1:1847] 0 0 0 0 0 0 0 0 0 0 ...\n $ pedidos_30_dias      : num [1:1847] 0 0 0 0 0 0 0 0 0 0 ...\n $ pedidos_delivery     : num [1:1847] 0 0 0 0 0 0 0 0 0 0 ...\n $ vendas_delivery      : num [1:1847] 0 0 0 0 0 0 0 0 0 0 ...\n $ ativo                : Factor w/ 2 levels \"0\",\"1\": 2 2 2 2 2 2 2 2 2 2 ...\n $ mode",
        "lo_negocio       : Factor w/ 31 levels \"Açaiteria\",\"Bar / Petiscariaaa\",..: 21 21 25 2 10 14 17 2 10 2 ...\n $ forma_pagamento      : Factor w/ 4 levels \"\",\"Boleto\",\"Cartão de Crédito\",..: 3 3 3 2 2 2 2 2 2 2 ...\n $ plano_escolhido      : Factor w/ 8 levels \"\",\"Básico\",\"Completo\",..: 4 4 4 4 4 4 4 4 4 4 ...\n $ desconto             : Factor w/ 17 levels \"Ação Fim de Ano (2ª mensalidade gratuita)\",..: 17 17 17 17 17 17 17 17 17 17 ...\n $ franquia             : Factor w/ 3 levels \"\",\"NÃO\",\"SIM\": 2 2 2 2",
        " 2 2 2 2 2 2 ...\n $ UF                   : Factor w/ 29 levels \"\",\"AC\",\"AL\",\"AM\",..: 12 9 12 21 28 14 4 28 28 28 ...\n $ canal                : Factor w/ 11 levels \"\",\"Automação de Marketing\",..: 6 10 7 6 11 7 6 7 7 7 ...\n $ icp                  : Factor w/ 3 levels \"\",\"Não\",\"Sim\": 2 2 2 2 2 2 2 2 2 2 ...\n $ plano_pagamento      : Factor w/ 5 levels \"\",\"Anual\",\"Mensal\",..: 3 3 3 3 3 3 3 3 3 3 ...\n",
        "> ",
        "dtrain <- xgb.DMatrix(data = matriz_explica_treino, label = var_dep_treino)",
        "Error in xgb.DMatrix(data = matriz_explica_treino, label = var_dep_treino) : \n  'data' has class 'character' and length 29552.\n  'data' accepts either a numeric matrix or a single filename.\n",
        "> ",
        "library(naivebayes)",
        "Error in library(naivebayes) : there is no package called ‘naivebayes’\n",
        "> ",
        "install.packages(\"naivebayes\")",
        "WARNING: Rtools is required to build R packages but is not currently installed. Please download and install the appropriate version of Rtools before proceeding:\n\nhttps://cran.rstudio.com/bin/windows/Rtools/\nInstalling package into ‘C:/Users/NTB-073/AppData/Local/R/win-library/4.3’\n(as ‘lib’ is unspecified)\ntentando a URL 'https://cran.rstudio.com/bin/windows/contrib/4.3/naivebayes_1.0.0.zip'\nContent type 'application/zip' length 955930 bytes (933 KB)\ndownloaded 933 KB\n\n",
        "package ‘naivebayes’ successfully unpacked and MD5 sums checked\n\nThe downloaded binary packages are in\n\tC:\\Users\\NTB-073\\AppData\\Local\\Temp\\RtmpGM8yGN\\downloaded_packages\n",
        "> ",
        "library(naivebayes)",
        "naivebayes 1.0.0 loaded\nFor more information please visit: \nhttps://majkamichal.github.io/naivebayes/\nWarning message:\npackage ‘naivebayes’ was built under R version 4.3.3 \n",
        "> ",
        "# Ajuste do modelo Naive Bayes",
        "> ",
        "nb_model <- naive_bayes(ativo ~ ., data = oversampled_treino)",
        "Warning messages:\n1: naive_bayes(): Feature modelo_negocio - zero probabilities are present. Consider Laplace smoothing. \n2: naive_bayes(): Feature forma_pagamento - zero probabilities are present. Consider Laplace smoothing. \n3: naive_bayes(): Feature plano_escolhido - zero probabilities are present. Consider Laplace smoothing. \n4: naive_bayes(): Feature desconto - zero probabilities are present. Consider Laplace smoothing. \n5: naive_bayes(): Feature franquia - zero probabilities are present. Consider Lapl",
        "ace smoothing. \n6: naive_bayes(): Feature UF - zero probabilities are present. Consider Laplace smoothing. \n7: naive_bayes(): Feature canal - zero probabilities are present. Consider Laplace smoothing. \n",
        "> ",
        "# Ajuste do modelo Naive Bayes",
        "> ",
        "nb_model <- naive_bayes(ativo ~ ., data = oversampled_treino, laplace = 1)",
        "> ",
        "# Previsões no conjunto de treino",
        "> ",
        "preditos_treino_nb <- predict(nb_model, treino, type = \"raw\")",
        "Error in match.arg(type) : 'arg' should be one of “class”, “prob”\n",
        "> ",
        "# Prever com o modelo Naive Bayes",
        "> ",
        "preditos_treino_nb <- predict(nb_model, newdata = treino, type = \"class\")",
        "Warning message:\npredict.naive_bayes(): more features in the newdata are provided as there are probability tables in the object. Calculation is performed based on features to be found in the tables. \n",
        "> ",
        "# Ajuste do modelo Naive Bayes",
        "> ",
        "nb_model <- naive_bayes(ativo ~ ., data = oversampled_treino, laplace = 1)",
        "> ",
        "> ",
        "# Obter as variáveis usadas no modelo",
        "> ",
        "vars_usadas <- colnames(nb_model$tables)",
        "> ",
        "> ",
        "# Selecionar apenas as variáveis usadas no conjunto de dados de treino",
        "> ",
        "treino_restrito <- treino[, vars_usadas]",
        "> ",
        "> ",
        "# Prever com o modelo Naive Bayes usando apenas as variáveis relevantes",
        "> ",
        "preditos_treino_nb <- predict(nb_model, newdata = treino_restrito, type = \"class\")",
        "Warning messages:\n1: predict.naive_bayes(): only 0 feature(s) out of 15 defined in the naive_bayes object \"nb_model\" are used for prediction.\n \n2: predict.naive_bayes(): no feature in the newdata corresponds to probability tables in the object. Classification is done based on the prior probabilities \n",
        "> ",
        "# Ajuste do modelo Naive Bayes",
        "> ",
        "nb_model <- naive_bayes(ativo ~ ., data = oversampled_treino, laplace = 1)",
        "> ",
        "> ",
        "# Obter as variáveis usadas no modelo",
        "> ",
        "vars_usadas <- colnames(nb_model$tables)",
        "> ",
        "> ",
        "# Selecionar apenas as variáveis usadas no conjunto de dados de treino",
        "> ",
        "treino_restrito <- treino[, vars_usadas]",
        "> ",
        "> ",
        "# Prever com o modelo Naive Bayes usando apenas as variáveis relevantes",
        "> ",
        "preditos_treino_nb <- predict(nb_model, newdata = treino_restrito, type = \"class\")",
        "Warning messages:\n1: predict.naive_bayes(): only 0 feature(s) out of 15 defined in the naive_bayes object \"nb_model\" are used for prediction.\n \n2: predict.naive_bayes(): no feature in the newdata corresponds to probability tables in the object. Classification is done based on the prior probabilities \n",
        "> ",
        "# Verificar se as variáveis estão corretas",
        "> ",
        "print(colnames(treino_restrito))",
        "character(0)\n",
        "> ",
        "# Ajuste do modelo Naive Bayes",
        "> ",
        "nb_model <- naive_bayes(ativo ~ ., data = oversampled_treino, laplace = 1)",
        "> ",
        "> ",
        "# Obter as variáveis usadas no modelo",
        "> ",
        "vars_usadas <- colnames(nb_model$tables)",
        "> ",
        "# Verificar as variáveis usadas",
        "> ",
        "print(vars_usadas)",
        "NULL\n",
        "> ",
        "# Ajuste do modelo Naive Bayes",
        "> ",
        "nb_model <- naive_bayes(ativo ~ ., data = oversampled_treino, laplace = 1)",
        "> ",
        "> ",
        "# Verificar as variáveis usadas no modelo",
        "> ",
        "vars_usadas <- names(nb_model$tables)",
        "> ",
        "# Verificar as variáveis usadas",
        "> ",
        "print(vars_usadas)",
        " [1] \"total_tickets_suporte\" \"lifetime_ate_churn\"    \"vendas_30_dias\"        \"pedidos_30_dias\"      \n [5] \"modelo_negocio\"        \"forma_pagamento\"       \"plano_escolhido\"       \"desconto\"             \n [9] \"franquia\"              \"UF\"                    \"canal\"                 \"icp\"                  \n[13] \"plano_pagamento\"       \"pedidos_delivery\"      \"vendas_delivery\"      \n",
        "> ",
        "treino_restrito <- treino[, vars_usadas]",
        "> ",
        "> ",
        "# Verificar se as variáveis estão corretas",
        "> ",
        "print(colnames(treino_restrito))",
        " [1] \"total_tickets_suporte\" \"lifetime_ate_churn\"    \"vendas_30_dias\"        \"pedidos_30_dias\"      \n [5] \"modelo_negocio\"        \"forma_pagamento\"       \"plano_escolhido\"       \"desconto\"             \n [9] \"franquia\"              \"UF\"                    \"canal\"                 \"icp\"                  \n[13] \"plano_pagamento\"       \"pedidos_delivery\"      \"vendas_delivery\"      \n",
        "> ",
        "# Prever com o modelo Naive Bayes usando apenas as variáveis relevantes",
        "> ",
        "preditos_treino_nb <- predict(nb_model, newdata = treino_restrito, type = \"class\")",
        "> ",
        "# Matriz de confusão para o conjunto de treino",
        "> ",
        "conf_matrix_treino_nb <- confusionMatrix(data = preditos_treino_nb, ",
        "+ ",
        "                                         reference = treino$ativo, ",
        "+ ",
        "                                         positive = \"1\")",
        "Warning message:\nIn confusionMatrix.default(data = preditos_treino_nb, reference = treino$ativo,  :\n  Levels are not in the same order for reference and data. Refactoring data to match.\n",
        "> ",
        "conf_matrix_treino_nb <- confusionMatrix(data = preditos_treino_nb, ",
        "+ ",
        "                                         reference = treino$ativo, ",
        "+ ",
        "                                         positive = \"1\",",
        "+ ",
        "                                         levels = levels(preditos_treino_nb))",
        "Error in table(data, reference, dnn = dnn, ...) : \n  todos os argumentos devem ter o mesmo comprimento\nAlém disso: Warning message:\nIn confusionMatrix.default(data = preditos_treino_nb, reference = treino$ativo,  :\n  Levels are not in the same order for reference and data. Refactoring data to match.\n",
        "> ",
        "# Ajustar os níveis da variável de referência",
        "> ",
        "treino$ativo <- factor(treino$ativo, levels = levels(preditos_treino_nb))",
        "> ",
        "# Matriz de confusão para o conjunto de treino",
        "> ",
        "conf_matrix_treino_nb <- confusionMatrix(data = preditos_treino_nb, ",
        "+ ",
        "                                         reference = treino$ativo, ",
        "+ ",
        "                                         positive = \"1\")",
        "> ",
        "# Extração de precisão e recall da matriz de confusão",
        "> ",
        "precision_treino_nb <- conf_matrix_treino_nb$byClass[\"Pos Pred Value\"]  # Precisão",
        "> ",
        "recall_treino_nb <- conf_matrix_treino_nb$byClass[\"Sensitivity\"]        # Recall",
        "> ",
        "# Imprimindo os resultados de precisão e recall",
        "> ",
        "print(paste(\"Naive Bayes - Precisão (treino):\", precision_treino_nb))",
        "[1] \"Naive Bayes - Precisão (treino): 0.988805970149254\"\n",
        "> ",
        "print(paste(\"Naive Bayes - Recall (treino):\", recall_treino_nb))",
        "[1] \"Naive Bayes - Recall (treino): 0.802422407267222\"\n",
        "> ",
        "# Avaliação na base de teste",
        "> ",
        "preditos_teste_nb <- predict(nb_model, teste, type = \"raw\")",
        "Error in match.arg(type) : 'arg' should be one of “class”, “prob”\n",
        "> ",
        "# Avaliação na base de teste",
        "> ",
        "preditos_teste_nb <- predict(nb_model, teste, type = \"prob\")",
        "Warning message:\npredict.naive_bayes(): more features in the newdata are provided as there are probability tables in the object. Calculation is performed based on features to be found in the tables. \n",
        "> ",
        "# Prever classes com o modelo Naive Bayes",
        "> ",
        "preditos_teste_nb <- predict(nb_model, newdata = teste, type = \"class\")",
        "Warning message:\npredict.naive_bayes(): more features in the newdata are provided as there are probability tables in the object. Calculation is performed based on features to be found in the tables. \n",
        "> ",
        "preditos_teste_nb <- predict(nb_model, newdata = teste, type = \"prob\")",
        "Warning message:\npredict.naive_bayes(): more features in the newdata are provided as there are probability tables in the object. Calculation is performed based on features to be found in the tables. \n",
        "> ",
        "source(\"C:/Users/NTB-073/Desktop/pós/TCC_churn/comparativo_churn.R\")",
        "── \u001B[1mAttaching core tidyverse packages\u001B[22m ──────────────────────────────────────────────────── tidyverse 2.0.0 ──\n\u001B[32m✔\u001B[39m \u001B[34mforcats  \u001B[39m 1.0.0     \u001B[32m✔\u001B[39m \u001B[34mstringr  \u001B[39m 1.5.0\n\u001B[32m✔\u001B[39m \u001B[34mlubridate\u001B[39m 1.9.2     \u001B[32m✔\u001B[39m \u001B[34mtibble   \u001B[39m 3.2.1\n\u001B[32m✔\u001B[39m \u001B[34mpurrr    \u001B[39m 1.0.1     \u001B[32m✔\u001B[39m \u001B[34mtidyr    \u001B[39m 1.3.0\n\u001B[32m✔\u001B[39m \u001B[34mreadr    \u001B[",
        "39m 2.1.4     \n── \u001B[1mConflicts\u001B[22m ────────────────────────────────────────────────────────────────────── tidyverse_conflicts() ──\n\u001B[31m✖\u001B[39m \u001B[34mdplyr\u001B[39m::\u001B[32mfilter()\u001B[39m masks \u001B[34mstats\u001B[39m::filter()\n\u001B[31m✖\u001B[39m \u001B[34mdplyr\u001B[39m::\u001B[32mlag()\u001B[39m    masks \u001B[34mstats\u001B[39m::lag()\n\u001B[31m✖\u001B[39m \u001B[34mpurrr\u001B[39m::\u001B[32mlift()\u001B[39m   masks \u001B[34mcaret\u001B[39",
        "m::lift()\n\u001B[31m✖\u001B[39m \u001B[34mdplyr\u001B[39m::\u001B[32mslice()\u001B[39m  masks \u001B[34mxgboost\u001B[39m::slice()\n\u001B[36mℹ\u001B[39m Use the \u001B]8;;http://conflicted.r-lib.org/\u0007conflicted package\u001B]8;;\u0007 to force all conflicts to become errors\n",
        "Type 'citation(\"pROC\")' for a citation.\n\nAttaching package: ‘pROC’\n\nThe following objects are masked from ‘package:stats’:\n\n    cov, smooth, var\n\n\nAttaching package: ‘plotly’\n\nThe following object is masked from ‘package:ggplot2’:\n\n    last_plot\n\nThe following object is masked from ‘package:xgboost’:\n\n    slice\n\nThe following object is masked from ‘package:stats’:\n\n    filter\n\nThe following object is masked from ‘package:graphics’:\n\n    layout\n\nrandomForest 4.7-1.1\nType rfNews() ",
        "to see new features/changes/bug fixes.\n\nAttaching package: ‘randomForest’\n\nThe following object is masked from ‘package:dplyr’:\n\n    combine\n\nThe following object is masked from ‘package:ggplot2’:\n\n    margin\n\nLoaded gbm 2.1.8.1\nLoaded ROSE 0.0-4\n\n\nAttaching package: ‘scales’\n\nThe following object is masked from ‘package:purrr’:\n\n    discard\n\nThe following object is masked from ‘package:readr’:\n\n    col_factor\n\n",
        "Error in install.packages : Updating loaded packages\nError in install.packages : Updating loaded packages\nError in install.packages : Updating loaded packages\nError in install.packages : Updating loaded packages\nError in install.packages : Updating loaded packages\ntibble [2,637 × 16] (S3: tbl_df/tbl/data.frame)\n $ ativo                : Factor w/ 2 levels \"0\",\"1\": 2 2 2 2 2 2 2 2 2 2 ...\n $ total_tickets_suporte: num [1:2637] 0 0 0 0 0 0 0 0 0 0 ...\n $ lifetime_ate_churn   : num [1:2637] 0 0 0 0 0 0 0 0 0 ",
        "0 ...\n $ vendas_30_dias       : num [1:2637] 0 0 0 0 0 0 0 0 0 0 ...\n $ pedidos_30_dias      : num [1:2637] 0 0 0 0 0 0 0 0 0 0 ...\n $ modelo_negocio       : Factor w/ 31 levels \"Açaiteria\",\"Bar / Petiscariaaa\",..: 21 21 25 2 10 14 17 2 14 10 ...\n $ forma_pagamento      : Factor w/ 4 levels \"\",\"Boleto\",\"Cartão de Crédito\",..: 3 3 3 2 2 2 2 2 2 2 ...\n $ plano_escolhido      : Factor w/ 8 levels \"\",\"Básico\",\"Completo\",..: 4 4 4 4 4 4 4 4 4 4 ...\n $ desconto             : Factor w/ 17 levels \"Ação Fim de",
        " Ano (2ª mensalidade gratuita)\",..: 17 17 17 17 17 17 17 17 17 17 ...\n $ franquia             : Factor w/ 3 levels \"\",\"NÃO\",\"SIM\": 2 2 2 2 2 2 2 2 2 2 ...\n $ UF                   : Factor w/ 29 levels \"\",\"AC\",\"AL\",\"AM\",..: 12 9 12 21 28 14 4 28 22 26 ...\n $ canal                : Factor w/ 11 levels \"\",\"Automação de Marketing\",..: 6 10 7 6 11 7 6 7 6 7 ...\n $ icp                  : Factor w/ 3 levels \"\",\"Não\",\"Sim\": 2 2 2 2 2 2 2 2 2 2 ...\n $ plano_pagamento      : Factor w/ 5 levels \"\",\"Anual\",\"Mensal",
        "\",..: 3 3 3 3 3 3 3 3 3 3 ...\n $ pedidos_delivery     : num [1:2637] 0 0 0 0 0 0 0 0 0 0 ...\n $ vendas_delivery      : num [1:2637] 0 0 0 0 0 0 0 0 0 0 ...\n[1] \"Precisão: 0.994704992435703\"\n[1] \"Recall: 0.995457986373959\"\n\nClassification tree:\nrpart(formula = ativo ~ ., data = oversampled_treino, method = \"class\", \n    parms = list(split = \"gini\"), control = rpart.control(minsplit = 10, \n        maxdepth = 15, minbucket = 20, cp = 0.001))\n\nVariables actually used in tree construction:\n[1] franquia         ",
        "  lifetime_ate_churn modelo_negocio     plano_escolhido    vendas_30_dias    \n\nRoot node error: 1321/2663 = 0.49606\n\nn= 2663 \n\n        CP nsplit rel error   xerror      xstd\n1 0.789553      0  1.000000 1.000000 0.0195317\n2 0.152157      1  0.210447 0.210447 0.0119448\n3 0.017033      2  0.058289 0.069644 0.0071344\n4 0.007570      4  0.024224 0.028009 0.0045726\n5 0.001000      5  0.016654 0.021953 0.0040543\n",
        "Setting levels: control = 1, case = 2\nSetting direction: controls < cases\n",
        "[1] \"Precisão: 0.0346320346320346\"\n[1] \"Recall: 0.0141592920353982\"\n\nRestarting R session...\n\n"
    ]
}